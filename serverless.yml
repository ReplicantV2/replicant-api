org: udittlamba
app: replicant-api
service: replicant-api
frameworkVersion: '3'
custom:
  accountsTable: 'accounts-${sls:stage}'
  scrapedPostsTable: 'scraped-posts-${sls:stage}'
  subredditsTable: 'subreddits-${sls:stage}'
  postQueueTable: 'post-queue-${sls:stage}'
  submittedPostsTable: 'submitted-posts-${sls:stage}'
provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ accountsTable, Arn ]
            - Fn::GetAtt: [ scrapedPostsTable, Arn ]
            - Fn::GetAtt: [ subredditsTable, Arn ]
            - Fn::GetAtt: [ postQueueTable, Arn ]
            - Fn::GetAtt: [ submittedPostsTable, Arn ]
  environment:
    ACCOUNTS_TABLE: 'accounts-${sls:stage}'
    SCRAPED_POSTS_TABLE: 'scraped-posts-${sls:stage}'
    SUBREDDITS_TABLE: 'subreddits-${sls:stage}'
    POST_QUEUE_TABLE: 'post-queue-${sls:stage}'
    SUBMITTED_POSTS_TABLE: 'submitted-posts-${sls:stage}'
    STAGE: '${sls:stage}'
functions:
  accountsHandler:
    handler: api/account.handler
    events:
      - httpApi: 'GET /${sls:stage}/accounts/fetch'
      - httpApi: 'POST /${sls:stage}/accounts/create'
      - httpApi: 'PATCH /${sls:stage}/accounts/patch'
      - httpApi: 'DELETE /${sls:stage}/accounts/delete'
resources:
  Resources:
    accountsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: account_name
            AttributeType: S
        KeySchema:
          - AttributeName: account_name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.accountsTable}
    scrapedPostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: post_id
            AttributeType: S
        KeySchema:
          - AttributeName: post_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.scrapedPostsTable}
    subredditsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: subreddit_id
            AttributeType: S
        KeySchema:
          - AttributeName: subreddit_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.subredditsTable}
    postQueueTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: post_id
            AttributeType: S
          - AttributeName: account_name
            AttributeType: S
        KeySchema:
          - AttributeName: post_id
            KeyType: HASH
          - AttributeName: account_name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.postQueueTable}
    submittedPostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: post_id
            AttributeType: S
          - AttributeName: account_name
            AttributeType: S
        KeySchema:
          - AttributeName: post_id
            KeyType: HASH
          - AttributeName: account_name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.submittedPostsTable}

plugins:
  - serverless-plugin-typescript
